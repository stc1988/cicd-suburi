name: Setup, Build
on:
  push:
  workflow_dispatch:
    inputs:
      target-branch:
        description: "Target branch to setup environment"
        required: false
        default: ""
defaults:
  run:
    shell: bash
    working-directory: ./moddable
concurrency:
  group: ${{ github.workflow}}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: Kesin11/actions-timeline@v2
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ./moddable/package-lock.json
      - run: npm ci
      - name: check latest release tag of Moddable
        if: inputs.target-branch == ''
        run: |
          API_URL="https://api.github.com/repos/Moddable-OpenSource/moddable/releases"
          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $API_URL)
          LATEST_TAG_NAME=$(echo $RESPONSE | jq -r '.[0].tag_name')
          echo "Latest release tag_name of Moddable: $LATEST_TAG_NAME"
          echo "latest_tag_name=$LATEST_TAG_NAME" >> $GITHUB_ENV
      - name: set cache_key
        run: echo "cache_key=${{runner.os}}-dependencies-${${{ env.latest_tag_name}}:-${{ inputs.target-branch}}}" >> $GITHUB_ENV
      - name: Restore cached dependencies of Moddale and ESP-IDF
        id: cache-dependencies-restore
        uses: actions/cache/restore@v4
        with:
          path: |
             /home/runner/.local/share
             /home/runner/.espressif
          key: ${{ env.cache_key }}
      - name: install Moddable
        if: steps.cache-dependencies-restore.outputs.cache-hit != 'true'
        run: npm run setup:moddable
      - name: install ESP32
        if: steps.cache-dependencies-restore.outputs.cache-hit != 'true'
        run: source $HOME/.local/share/xs-dev-export.sh && npm run setup:esp32
      - name: xs-dev doctor
        run: source $HOME/.local/share/xs-dev-export.sh && npm run doctor
      - name: Measurement of cache target size.
        run: du -sh $HOME/.local/share && du -sh $HOME/.espressif/ 
      - name: Save dependencies of Moddale and ESP-IDF to cache
        id: cache-dependencies-save
        uses: actions/cache/save@v4
        with:
          path: |
             /home/runner/.local/share
             /home/runner/.espressif
          key: ${{ env.cache_key }}
      - name: build balls example app for ESP32.
        run: source $HOME/.local/share/xs-dev-export.sh && mcconfig -d -m -p esp32/m5stack $HOME/.local/share/moddable/examples/piu/balls/manifest.json -t build

